trigger:
- develop*
- feature*
- master

pr:
- develop*
- feature*

resources:
  repositories:
    - repository: templates
      type: github
      name: deltics/azure-pipeline-templates
      endpoint: GitHubTemplates
      ref: refs/heads/develop

pool:
  name: $(AgentPool)
  demands: Delphi

variables:
  dugetLogLevel: info

jobs:
- job: Prep
  steps:
  - template: gitversion.yml@templates

- job: Build
  condition: and(succeededOrFailed(), eq(variables['IncludeBuild'], 'yes'))
  steps:
  - script: |
      duget init --log:$(DugetLogLevel)
      duget restore --path tests --log:$(DugetLogLevel)
    displayName: 'Restore Duget dependencies'

  - template: build-all.yml
    parameters:
      delphiVersions: [ 7, 2005, 2006, 2007, 2009, 2010, xe, xe2, xe3, xe4, xe5, xe6, xe7, xe8, 10, 10.1, 10.2, 10.3 ]

  - template: build-all.yml
    parameters:
      delphiVersions: [ xe2, xe3, xe4, xe5, xe6, xe7, xe8, 10, 10.1, 10.2, 10.3 ]
      platform: x64

- job: Test
  condition: and(succeededOrFailed(), eq(variables['IncludeTestRuns'], 'yes'))
  variables:
    GitVersion: $[ GitVersion.outputs['SemVer'] ]
  steps:
  - template: test-all.yml
    parameters:
      delphiVersions: [ 7, 2005, 2006, 2007, 2009, 2010, xe, xe2, xe3, xe4, xe5, xe6, xe7, xe8, 10, 10.1, 10.2, 10.3 ]

  - template: test-all.yml
    parameters:
      delphiVersions: [ xe2, xe3, xe4, xe5, xe6, xe7, xe8, 10, 10.1, 10.2, 10.3 ]
      platform: x64

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: XUnit
      testResultsFiles: '*.xml'
      searchFolder: '.results'
      testRunTitle: Build $(gitversion)
    condition: succeededOrFailed()

- job: Packaging
  condition: and(succeededOrFailed(), eq(variables['IncludePackaging'], 'yes'))
  variables:
    GitVersion: $[ GitVersion.outputs['SemVer'] ]
  steps:
  - powershell: duget pack --version $(gitversion) --log:$(DugetLogLevel)
    displayName: Create Duget package

  - powershell: |
      $feed = '$(gitversionprelabel)'
      if ($feed -eq '') {
        $feed = 'release'
      }
      duget push --feed:$feed --log:$(DugetLogLevel)
    displayName: Publish Duget package
    